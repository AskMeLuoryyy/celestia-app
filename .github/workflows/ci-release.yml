name: ci-release

# Run this workflow on push events (i.e. PR merge) to main or release branches,
# push events for new semantic version tags, all PRs, and manual triggers.
on:
  push:
    branches:
      - main
      - "v[0-9]+.x"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"
  pull_request:

jobs:
  lint:
    uses: ./.github/workflows/lint.yml

  markdown-linter:
    uses: ./.github/workflows/markdown-linter.yml

  test:
    uses: ./.github/workflows/test.yml

  goreleaser-check:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: check

  # Generate the release with goreleaser to include pre-built binaries
  goreleaser:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
    permissions: "write-all"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v5
        with:
          go-version: 1.21.1
      - name: Create .release-env file
        run: |-
          echo 'GITHUB_TOKEN=${{secrets.GORELEASER_ACCESS_TOKEN}}' >> .release-env
      - name: Create prebuilt binaries and attach them to the GitHub release
        run: make prebuilt-binary
